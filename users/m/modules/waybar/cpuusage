#!/bin/sh

# Output the current CPU usage percentage for each core, formatted in a way
# that can be used with a sparks font to show a nice little chart.
#
# The output is sent once a second, so this can easily be used with waybar

stats=$(awk '/cpu[0-9]+/ {printf "%d %d %d\n", substr($1,4), ($2 + $3 + $4 + $5), $5 }' /proc/stat)
old="$stats"
sleep 1

while true; do
	avgval=0
	avgcnt=0

	echo -en "{\"text\": \"{"

	stats=$(awk '/cpu[0-9]+/ {printf "%d %d %d\n", substr($1,4), ($2 + $3 + $4 + $5), $5 }' /proc/stat)
	while read currow; do
		curid=${currow%% *}
		currest=${currow#* }
		curtotal=${currest%% *}
		curidle=${currest##* }

		while read oldrow; do
			oldid=${oldrow%% *}
			oldrest=${oldrow#* }
			oldtotal=${oldrest%% *}
			oldidle=${oldrest##* }

			if [ $curid -eq $oldid ]; then
				total=$(($curtotal - $oldtotal))
				idle=$(($curidle - $oldidle))
				busy=$(($total - $idle))

				if [ $curid -ne 0 ]; then
					echo -en ","
				fi
				if [ $total -eq 0 ]; then
					per=0
				else
					per=$(( ( $busy * 100 ) / ( $total ) ))
					((avgval += $per))
				fi
				((avgcnt++))

				echo -en "$per"
			fi
		done < <(echo "$old")
	done < <(echo "$stats")
	old="$stats"

	if [ $avgcnt -gt 0 ]; then
		avgper=$(( $avgval / $avgcnt ))
	else
		avgper=0
	fi

	echo -en "}\", \"tooltip\": \"$avgper%\"}\n"

	sleep 1
done
